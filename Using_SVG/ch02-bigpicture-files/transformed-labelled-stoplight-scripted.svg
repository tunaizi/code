<svg xmlns="http://www.w3.org/2000/svg" xml:lang="en"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     height="320px" width="400px" >
    <title>Transformed Labels Animated Stoplight</title>
        <!-- Definitions and styles omitted
ifdef::unicorns[]
-->
    <defs>
        <circle id="light" cx="70" r="30" />
        <radialGradient id="red-light-on" fx="0.45" fy="0.4">
           <stop stop-color="orange" offset="0.1"/>
           <stop stop-color="red" offset="0.8"/>
           <stop stop-color="brown" offset="1.0"/>
        </radialGradient>
        <radialGradient id="red-light-off" fx="0.45" fy="0.4">
            <stop stop-color="maroon" offset="0"/>
            <stop stop-color="#220000" offset="0.7"/>
            <stop stop-color="black" offset="1.0"/>
        </radialGradient>
        <radialGradient id="yellow-light-on" fx="0.45" fy="0.4">
            <stop stop-color="yellow" offset="0.1"/>
            <stop stop-color="orange" offset="0.6"/>
            <stop stop-color="darkOrange" offset="1.0"/>
        </radialGradient>
        <radialGradient id="yellow-light-off" fx="0.45" fy="0.4">
            <stop stop-color="#A06000" offset="0"/>
            <stop stop-color="#804000" offset="0.7"/>
            <stop stop-color="#502000" offset="1"/>
        </radialGradient>
        <radialGradient id="green-light-on" fx="0.45" fy="0.4">
            <stop stop-color="#88FF00" offset="0.1"/>
            <stop stop-color="forestGreen" offset="0.7"/>
            <stop stop-color="darkGreen" offset="1.0"/>
        </radialGradient>
        <radialGradient id="green-light-off" fx="0.45" fy="0.4">
            <stop stop-color="#007000" offset="0"/>
            <stop stop-color="#004000" offset="0.6"/>
            <stop stop-color="#001000" offset="1.0"/>
        </radialGradient>
        <linearGradient id="metal" spreadMethod="repeat"
                        gradientTransform="scale(0.7) rotate(75)">
            <stop stop-color="#808080" offset="0"/>
            <stop stop-color="#404040" offset="0.25"/>
            <stop stop-color="#C0C0C0" offset="0.35"/>
            <stop stop-color="#808080" offset="0.5"/>
            <stop stop-color="#E0E0E0" offset="0.7"/>
            <stop stop-color="#606060" offset="0.75"/>
            <stop stop-color="#A0A0A0" offset="0.9"/>
            <stop stop-color="#808080" offset="1"/>
        </linearGradient>
    </defs>
    <style type="text/css">
        text {
            font-size: 60px; 
            font-family: sans-serif;
            font-weight: bold;
        }
    </style>
<!-- 
endif::unicorns[]
        -->
    <rect x="20" y="20" width="100" height="280" 
          fill="url(#metal)" stroke="black" stroke-width="3" /> 
    <g stroke="black" stroke-width="2">
        <g class="red light" display="block">
            <use xlink:href="#light" y="80" fill="url(#red-light-off)" />
            <g class="lit">
                <use xlink:href="#light" y="80" fill="url(#red-light-on)" />
                <text id="stopText" transform="translate(140,100)" 
                      fill="red" stroke="darkRed">STOP</text>
            </g>
        </g>
        <g class="yellow light">
            <use xlink:href="#light" y="160" fill="url(#yellow-light-off)" />
            <g class="lit" display="none">
                <use xlink:href="#light" y="160" fill="url(#yellow-light-on)" />
                <text id="slowText" transform="translate(140,180)" 
                      fill="gold" stroke="darkOrange">SLOW</text>
            </g>
        </g>
        <g class="green light">
            <use xlink:href="#light" y="240" fill="url(#green-light-off)" />
            <g class="lit" display="none">
                <use xlink:href="#light" y="240" fill="url(#green-light-on)" />
                <text id="goText" transform="translate(140,260)" 
                      fill="forestGreen" stroke="darkGreen">GO!</text>
            </g>
        </g>
    </g>
    <animateTransform xlink:href="#stopText" id="animStop" 
                      attributeName="transform" type="rotate" 
                      by="360 150,-25" additive="sum" fill="freeze"
                      begin="indefinite" dur="0.2s" repeatDur="1s"/>
    <animate          xlink:href="#stopText"  
                      attributeName="stroke-width"
                      by="10"
                      begin="animStop.begin + 1s" dur="2s" />
    
    <animateTransform xlink:href="#slowText" id="animSlow" 
                      attributeName="transform" type="scale" 
                      values="1,1; 0.9,1.1; 1,1" additive="sum" 
                      begin="indefinite" dur="1s" repeatCount="3" />
    <animate          xlink:href="#slowText"  
                      attributeName="opacity"  
                      from="0" to="1"
                      begin="animSlow.begin" dur="3s" />
    
    <animateTransform xlink:href="#goText" id="animGo" 
                      attributeName="transform" type="skewX" 
                      by="-30" fill="freeze" additive="sum" 
                      calcMode="spline" keySplines="0,0.5 0.5,0.5"
                      begin="indefinite" dur="0.7s" />
    <animateMotion    xlink:href="#goText"  
                      path="M0,0 C100,0 150,-50 300,-300" 
                      rotate="auto" additive="sum"  
                      calcMode="spline" keySplines="0.2,0.1 0.5,0.5"
                      begin="animGo.begin + 0.5s" dur="2.5s" />
    
    <script><![CDATA[
    (function(){/*Create a closure to encapsulate variables*/

        var lights = ["green", "yellow", "red"];
            /* the class names that distinguish each light */
        var animations = ["animGo", "animSlow", "animStop"]
            /* the id values for the main animations for each light */
        var nLights = lights.length;
            /* the number of lights */
        var lit = 2; 
            /* index within the lights array of the light
               that is initially lit */

        function cycle() {
            lit = (lit + 1) % nLights; /* advance the cycle */

            var litElement, selector, animation;

            for (var i=0; i < nLights; i++ ) {
                selector = "." + lights[i] + " .lit";
                /* selector of form ".red .lit" will select 
                   the first element of class "lit" that is
                   a child of an element with class "red" */

                litElement = document.querySelector(selector);
                litElement.style.setProperty("display",
                    (i==lit)? "block" : "none",
                    null);
                /* modifying the style property sets an inline style, 
                   which over-rides the presentation attribute */
            }
            animation = document.getElementById(animations[lit]);
            try {
                animation.beginElement();
            }catch(e){/* ignore error for unsupported animation */}
        }

        cycle()
        setInterval(cycle, 3000); 
            /* start a 3-second (3000ms) timer */

    })() /* run the closure code */
]]></script>
</svg>